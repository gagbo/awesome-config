#+TITLE: Awesome configuration

Now that I know Lua better, I might make this work to my liking.

* Dependencies
** Autostart / daemons
- Picom
- xfce4-power-manager
- nextcloud
- nm-applet

** Commands
- Brightness control :: brightnessctl
- Music control :: mpc
- Volume control :: amixer

** Widgets
- Network widget :: iw
- Weather widget :: luarocks install lua-socket
- Weather widget :: [[./json.lua][json.lua]] for the weather widget
- Weather widget :: Arc icon theme (in =/usr/share/icons/Arc/status/symbolic/weather*.svg=)

* Secrets
The [[./secrets-example.lua][secrets-example]] file shows which secrets are currently used and should be
correctly defined.

* TODO Tasks [11/12]
** DONE Add a "test" target to Makefile
This should run awesome in Xephyr for the test phase
** DONE Reduce icons dependencies [2/2]
*** DONE Brightness Widget
Vendor the icon
*** DONE Weather widget
Added the Arc dependency it's easier
** DONE Add an example secrets file (or use defensive programming)
** DONE Check that all dependencies in README are listed correctly
** DONE Make the background not a hard path
Use feh or nitrogen if possible : cancelled for now, but the wallpaper is just included in the repo now
** CANCELLED Make the configuration a luarock (vendor everything like stack for XMonad) :CANCELLED:
:LOGBOOK:
- State "CANCELLED"  from "TODO"       [2020-05-26 mar. 15:50] \\
  Fixing awesome version cannot be done with luarocks, so the main reason for this whole thing is gone.
:END:
*** DONE Add a basic rocks spec
*** CANCELLED Add fixed depedencies in the spec :CANCELLED:
:LOGBOOK:
- State "CANCELLED"  from "TODO"       [2020-05-26 mar. 15:49] \\
  Awesome is essentially a C program so luarocks can't help, and lain is not easily fetchable from luarocks
:END:
Use luarocks spec to :
- Fix awesome version
- Fix lain version

The rest has to stay as git submodules.

*** DONE Test installation of luarocks spec
Make sure the Luarocks spec correctly install the awesome binary
This will prevent the last part of stability I need.
** TODO Find a way to vendor/lock/bundle awesome version and test against that
